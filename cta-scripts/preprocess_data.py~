"""
Jason Qin
CS230

Preprocess CT scan data by 
1) match segmentation masks to CT scan DICOM images
2) converting segmentation masks and DICOM images to PNG
3) construct relevant dictionary for passing training data into semantic-segmentation-NN
"""

import numpy as np
import matplotlib.image as mpimg
import os
import util


def convert_sample(dcmDir, segFile, outputDir):
    """
    For a given patient, convert DCM images and segmentation masks to PNG files.
    There will be one PNG image per CT scan slice, and one PNG image for each mask
    for each slice.

    Arguments:
        dcmDir: [string] directory containing DCM images for a given patient
        segFile: [string] file containing patient segmentation masks
        outputDir: [string] path to folder to output PNG images

    Return:
        True if successful
    """

    # convert patient DCM files to PNG
    dcmFiles = [f for f in os.listdir(dcmDir) if os.isfile(os.join(dcmDir, f))]
    for f in dcmFiles:
        #dcm_to_png(f, outputDir)

        
    with open(dcmFile, 'rb') as d:
        dcmData = dicom.dcmread(d)

    dcmName = re.search(r'(\d+)-(\d+).dcm', os.path.basename(dcmFile))
    if m is None:
        raise RuntimeError:('Unexpected DICOM name: {}'.format(os.path.basename(dcmFile)))
    
    plt.imsave(output + dcmName[:-4] + '.png', dcmData)
    return True


def nifti_to_png(niftiFile, outputFolder):
    """
    Convert Nifti to PNG
    Arguments:
        niftiFile: [string] path to niftiFile to convert
        outputFolder: [string] path to folder to output PNG image

    Return: 
        True if successful
    """
    mask = nib.load(niftiFile)

    # Nifti data is stored as (X, Y, Z) numpy arrays, with X = height,
    # Y = width, and Z = # slices of CT scan data
    numSlices = mask.shape[2]

    for i in range(numSlices):
        maskData = mask[:, :, i].transpose(1, 0)  # must transpose for mask to match DCM data!!!
        imgio.imsave('mask_{0:04}.png'.format(i+1), maskData)

    return True



# Create dictionary mapping segmentation masks to CT Scans
dict = seg_map_dict('/data2/yeom/ky_aneur/segmentation/new_segmentation','/data2/yeom/ky_aneur/sah/SAH_1.25')

# for each patient, convert the DICOM files and masks to png and save these in a new directory
for key, value in dict.iteritems():
    convert_sample(value, kay, ???outputDir)
    